<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" total="6" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="TestNG task" duration-ms="2064" started-at="2017-01-20T09:14:49Z" finished-at="2017-01-20T09:14:51Z">
    <groups>
      <group name="negative">
        <method signature="CalculatorTest.sumCheck(long, long, long)[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="sumCheck" class="com.epam.testngtask.CalculatorTest"/>
      </group> <!-- negative -->
      <group name="positive">
        <method signature="CalculatorTest.sumCheck(long, long, long)[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="sumCheck" class="com.epam.testngtask.CalculatorTest"/>
        <method signature="CalculatorTest.testDiv()[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="testDiv" class="com.epam.testngtask.CalculatorTest"/>
        <method signature="CalculatorTest.testSin()[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="testSin" class="com.epam.testngtask.CalculatorTest"/>
        <method signature="CalculatorTest.testSqrt()[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="testSqrt" class="com.epam.testngtask.CalculatorTest"/>
        <method signature="Multtest.testMult(int, int, long)[pri:0, instance:com.epam.testngtask.Multtest@38cccef]" name="testMult" class="com.epam.testngtask.Multtest"/>
      </group> <!-- positive -->
    </groups>
    <test name="Multtest" duration-ms="2064" started-at="2017-01-20T09:14:49Z" finished-at="2017-01-20T09:14:51Z">
      <class name="com.epam.testngtask.Multtest">
        <test-method status="FAIL" signature="testMult(int, int, long)[pri:0, instance:com.epam.testngtask.Multtest@38cccef]" name="testMult" duration-ms="8" started-at="2017-01-20T12:14:49Z" finished-at="2017-01-20T12:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[8]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[17]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [17] but found [16]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [17] but found [16]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:267)
	at org.testng.Assert.assertEquals(Assert.java:277)
	at com.epam.testngtask.Multtest.testMult(Multtest.java:24)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testMult -->
      </class> <!-- com.epam.testngtask.Multtest -->
      <class name="com.epam.testngtask.CalculatorTest">
        <test-method status="PASS" signature="testSin()[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="testSin" duration-ms="2036" started-at="2017-01-20T12:14:49Z" finished-at="2017-01-20T12:14:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSin -->
        <test-method status="PASS" signature="testDiv()[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="testDiv" duration-ms="9" started-at="2017-01-20T12:14:49Z" finished-at="2017-01-20T12:14:49Z">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[Attempt to divide by zero]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: Attempt to divide by zero
	at com.epam.tat.module4.Calculator.div(Calculator.java:34)
	at com.epam.testngtask.CalculatorTest.testDiv(CalculatorTest.java:35)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDiv -->
        <test-method status="PASS" signature="sumCheck(long, long, long)[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="sumCheck" duration-ms="27" started-at="2017-01-20T12:14:49Z" data-provider="dataProviderForSum" finished-at="2017-01-20T12:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumCheck -->
        <test-method status="PASS" signature="testSqrt()[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="testSqrt" duration-ms="2023" started-at="2017-01-20T12:14:49Z" finished-at="2017-01-20T12:14:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testSqrt -->
        <test-method status="FAIL" signature="sumCheck(long, long, long)[pri:0, instance:com.epam.testngtask.CalculatorTest@19e1023e]" name="sumCheck" duration-ms="0" started-at="2017-01-20T12:14:49Z" data-provider="dataProviderForSum" finished-at="2017-01-20T12:14:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[10]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[100]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[-90]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [-90] but found [110]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [-90] but found [110]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:496)
	at org.testng.Assert.assertEquals(Assert.java:125)
	at org.testng.Assert.assertEquals(Assert.java:267)
	at org.testng.Assert.assertEquals(Assert.java:277)
	at com.epam.testngtask.CalculatorTest.sumCheck(CalculatorTest.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- sumCheck -->
      </class> <!-- com.epam.testngtask.CalculatorTest -->
    </test> <!-- Multtest -->
  </suite> <!-- TestNG task -->
  <suite name="TestNG task suite" duration-ms="0" started-at="2017-01-20T09:14:51Z" finished-at="2017-01-20T09:14:51Z">
    <groups>
    </groups>
  </suite> <!-- TestNG task suite -->
</testng-results>
